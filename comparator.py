#importing all libraries required to show our outcomes in graphical format. 
import pandas as pd
import matplotlib.pyplot as plt
import itertools
from rsa import main as prog1
from rsa_crt import main as prog2
from enhanced_rsa import main as prog3
# No.of bits used for prime numbers
bits = [128, 256, 512, 1024]
# Initializing public keys
p = [136837619590138472663300167720598431843,
     69899075623349099771784857435809058254803949935416309714658259847542609978507,
     7127013173074775488505842889355475865611714886591738891725794885032343773110937704841165471272282076027210233153064600368030135675827557503060336302479131,
     166268270583062865526487477280010410430765843915913418096065632819896206365165341858957149325904778289732893810196629443982737363847071271558092561761359058847359737965503798811850882853480603201103975611448338256556169704778519966782587925473691610897867127788442879844239357572547174322717239103570360471993]
q = [123096076446566644717005206099254071733,
     46362491290509621266091813753118854332750766665612445709782178265717621980277,
     5370210610886904662895448262589514368398289145956686289360418028902650995215957150720181968140613853620828687128528255778977189504070206080127672545520187,
     116614626292008954111313386462499206651664994235082172821901290986772352503360991660838859681270632632027639629962504632017676019062102521290018295933924919828962195211765389294122771814374798471753174150088339852205277989879378906992231098515618012796201352893998156612391126923037550395724931468819274554231]
a = [332566652785941066597895308401882192113,
     93125849589961896135452329908823504994496494499739340935630016760786256720123,
     9768365665502001614125402492656544003818512851728992716408111446050189348125977107219338692080336459510548570514035930647806234054071351953054837370947941,
     111411521031911620224712797855701916539278466091703860996456123617203407049081537309582434144599367410125491774261286301474143843466423702533176217471044877238196588393538519706656154567468313248339983727983855068731763095223987449689481862762621825678703272386179208333349383076652723127101965009290574084583]
b = [312707904185082069513214486835062247999,
     46612427969081741118328923438405200567041628299457444832755805208844710989751,
     10211133770504400790062691704024170944768755376941752830881666545005872527988873744089363810568541529682667754743646936531340880052926099673471264770342597,
     56463070017486275200304879662466129025516581778954473975161494697242430727621290638343715498550357931441057643961560526117452325681817559714943165523969387738872657949889501846549505180760131668744074816174707532364757893947390206861475964129244820154334041232171268199207694884344648071026120020931035452307]

e = 65537
# Plain text
pt = 1234567890
# Driver code
print('Comparing various versions of RSA...')
cols = ['No.of bits', 'RSA', 'RSA-CRT', 'Enhanced RSA']
enc_time = pd.DataFrame(columns=cols)
dec_time = pd.DataFrame(columns=cols)
for (bitno, pi, qi, ai, bi) in zip(bits, p, q, a, b):
    print('\n**', bitno, '**\n')
    enc_t1, dec_t1 = prog1(pi, qi, e, pt)
    enc_t2, dec_t2 = prog2(pi, qi, e, pt)
    enc_t3, dec_t3 = prog3(ai, bi, pi, qi, e, pt)
    series1 = pd.Series([bitno, enc_t1, enc_t2, enc_t3],
                        index=enc_time.columns)
    series2 = pd.Series([bitno, dec_t1, dec_t2, dec_t3],
                        index=dec_time.columns)
    enc_time = enc_time.append(series1, ignore_index=True)
    dec_time = dec_time.append(series2, ignore_index=True)
enc_time = enc_time.astype({'No.of bits': int})
dec_time = dec_time.astype({'No.of bits': int})
# Plotting the results
vals = {'Encryption': enc_time,
        'Decryption': dec_time
        }
for i in vals:
    fig = plt.figure(f'{i} time comparison', figsize=(6.7, 6))
    plt.xlabel('No.of bits')
    plt.ylabel('Time taken (milliseconds)')
    ax = fig.gca()
    ax.plot(vals[i]['No.of bits'], vals[i]['RSA'], label='RSA', linewidth=5)
    ax.plot(vals[i]['No.of bits'], vals[i]
            ['RSA-CRT'], label='RSACRT', linewidth=5)
    ax.plot(vals[i]['No.of bits'], vals[i]['Enhanced RSA'],
            label='Enhanced RSA', linewidth=5)
    plt.xticks(bits)
    plt.legend()
plt.show()
